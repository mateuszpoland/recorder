version: '3'

services:
  client:
    container_name: client
    stdin_open: true
    networks:
      - api
    volumes:
      - './records_client:/app:rw'
    build:
      context: .
      dockerfile: docker/client/Dockerfile
    ports:
      - '3000:3000'

  nginx:
    image: nginx:1.15.3-alpine
    container_name: nginx
    restart: on-failure
    networks:
        - api
    volumes:
      - './records:/usr/src/app'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api

  db:
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    image: mysql
    networks:
      - api
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: passwd
      MYSQL_USER: user
      MYSQL_PASSWORD: passwd
      MYSQL_DATABASE: records
    volumes:
      - 'mysqldata:/var/lib/mysql'
    ports:
      - 3306:3306

  api:
    container_name: api
    user: 1000:1000
    networks:
        - api
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    restart: on-failure
    volumes:
      - './records:/usr/src/app:rw'

networks:
  api:
    driver: bridge

volumes:
  storage:
    driver: local
  mysqldata:
